version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile_Web
    ports:
      - "5014:8080"
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__Survey: "Host=db;Port=5432;Database=surveys_dev;Username=postgres;Password=postgres"
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: .
      dockerfile: Dockerfile_Migrations
    environment:
      ConnectionStrings__Survey: "Host=db;Port=5432;Database=surveys_dev;Username=postgres;Password=postgres"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: surveys_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d surveys_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

volumes:
  postgres_data: